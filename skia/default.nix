{ stdenv, lib, fetchFromGitHub, fetchgit, writeText, pkg-config, testers,
validatePkgConfig, python3, gn, ninja, fontconfig, freetype, expat, icu, libGL,
libjpeg, libpng, libwebp, zlib, mesa, harfbuzzFull }:

let
  # skia-deps.nix is generated by: ./skia-make-deps.sh 'angle2|dng_sdk|piex|sfntly|wuffs'
  depSrcs = import ./skia-deps.nix { inherit fetchgit; };
in
stdenv.mkDerivation (finalAttrs: {
  name = "skia_quasar-wayland";
  version = "chrome/m123";

  src = fetchFromGitHub {
    owner = "google";
    repo = "skia";
    rev = finalAttrs.version;
    hash = "sha256-jSKvffBMyk/Y7kQ/MGDaXOHr4VLB7opdE8sCM7qnm8I=";
  };

  nativeBuildInputs = [ python3 gn ninja pkg-config validatePkgConfig ];

  buildInputs = [
    fontconfig expat icu libGL libjpeg libpng libwebp zlib
    mesa harfbuzzFull
  ];

  propagatedBuildInputs = [ libjpeg libpng libwebp freetype ];

  dontStrip = true;

  outputs = [ "out" "dev" "srcTree" ];

  preConfigure = ''
    mkdir -p third_party/externals
    ln -s ${depSrcs.angle2} third_party/externals/angle2
    ln -s ${depSrcs.dng_sdk} third_party/externals/dng_sdk
    ln -s ${depSrcs.piex} third_party/externals/piex
    ln -s ${depSrcs.sfntly} third_party/externals/sfntly
    ln -s ${depSrcs.wuffs} third_party/externals/wuffs

    ln -s ${depSrcs.spirv-tools} third_party/externals/spirv-tools
    ln -s ${depSrcs.spirv-headers} third_party/externals/spirv-headers
    ln -s ${depSrcs.libjpeg-turbo} third_party/externals/libjpeg-turbo

    ln -s ${depSrcs.expat} third_party/externals/expat
    ln -s ${depSrcs.libwebp} third_party/externals/libwebp
  '';

  configurePhase = ''
    runHook preConfigure

    mkdir -p out/Release

    cat > out/Release/args.gn <<EOF
    is_debug=true
    skia_build_for_debugger=true
    #is_official_build=true
    is_component_build=true
    skia_use_egl=true
    skia_use_x11=false
    skia_use_system_libwebp=false

    skia_use_system_libpng=true
    skia_use_system_zlib=true
    skia_use_system_harfbuzz=true
    skia_use_system_icu=true
    skia_use_system_freetype2=true
    extra_cflags=[
      "-Og",
      "-ggdb",
      "-ffile-prefix-map=../..=$srcTree",
      "-DGR_EGL_TRY_GLES3_THEN_GLES2",
      "-I${harfbuzzFull.dev}/include/harfbuzz",
    ]
    EOF

    cat out/Release/args.gn

    gn gen out/Release

    runHook postConfigure
  '';

  buildPhase = ''
    runHook preBuild
    ninja -C out/Release skia modules
    runHook postBuild
  '';

  installPhase = ''
    mkdir -p $out/lib
    mkdir -p $dev/include
    mkdir -p $dev/lib/pkgconfig

    # Glob will match all subdirs.
    shopt -s globstar

    ls -l out/Release/**/*.{so,a}

    cp out/Release/*.a out/Release/*.so $out/lib/

    cp -r --parents -t $dev/include/ \
      include/codec \
      include/config \
      include/core \
      include/effects \
      include/gpu \
      include/private \
      include/utils \
      include/third_party/skcms/*.h \
      src/gpu/**/*.h \
      src/core/*.h \
      modules/skshaper/include/*.h \
      modules/skcms/skcms.h \
      modules/skcms/src/skcms_public.h \
      third_party/externals/angle2/include \
      third_party/skcms/**/*.h

    cat > $dev/lib/pkgconfig/skia.pc <<EOF
    Name: skia
    Description: ${finalAttrs.meta.description}
    Version: ${finalAttrs.version}
    Cflags: -I$dev/include
    Libs: -L$out/lib -lskia
    Requires.private: libjpeg, libpng, libwebp, freetype2
    EOF

    rm -rf out/
    mkdir $srcTree
    cp -r * .* $srcTree/
  '';

  preFixup = ''
    mkdir /build/ignore
    srcTree=/build/ignore
  '';

  passthru.tests.pkg-config = testers.testMetaPkgConfig finalAttrs.finalPackage;

  meta = with lib; {
    pkgConfigModules = [ "skia" ];
    description = "Skia is a complete 2D graphic library for drawing Text, Geometries, and Images";
    homepage = "https://skia.org/";
    license = licenses.bsd3;
    platforms = platforms.all;
  };
})
